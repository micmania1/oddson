!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t){e.exports=require("aws-serverless-express")},function(e,t){e.exports=require("express")},function(e,t){e.exports.eventContext=e=>function(t,n,r){const a=(e=e||{}).reqPropKey||"apiGateway",o=void 0===e.deleteHeaders||e.deleteHeaders;if(!t.headers["x-apigateway-event"]||!t.headers["x-apigateway-context"])return console.error("Missing x-apigateway-event or x-apigateway-context header(s)"),void r();t[a]={event:JSON.parse(decodeURIComponent(t.headers["x-apigateway-event"])),context:JSON.parse(decodeURIComponent(t.headers["x-apigateway-context"]))},o&&(delete t.headers["x-apigateway-event"],delete t.headers["x-apigateway-context"]),r()}},function(e,t){e.exports=require("cors")},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(2),o=n(3),c=n.n(o),i=n(1);const s=n.n(i)()(),d=Object(i.Router)();d.use(c()()),d.use(Object(a.eventContext)()),d.post("/new",(e,t)=>{const n=JSON.parse('{"id":"fe5d746a-e582-4cec-b2c8-d0c44e9108d1","challenge":"Do the thing","odds":0,"challenger":{"name":"Scott","number":0},"victim":{"name":"Scott","number":0},"status":"new"}');t.json(n)}),d.post("/activate/:id",(e,t)=>{const n=JSON.parse('{"id":"fe5d746a-e582-4cec-b2c8-d0c44e9108d1","challenge":"Do the thing","odds":20,"challenger":{"name":"Challenger","number":0},"victim":{"name":"Victim","number":7},"status":"activated"}');t.json(n)}),d.post("/complete",(e,t)=>{const n=JSON.parse('{"id":"fe5d746a-e582-4cec-b2c8-d0c44e9108d1","challenge":"Do the thing","odds":20,"challenger":{"name":"Challenger","number":0},"victim":{"name":"Victim","number":7},"status":"activated"}');t.json(n)}),d.get("/check/:id",(e,t)=>{const n=JSON.parse('{"id":"fe5d746a-e582-4cec-b2c8-d0c44e9108d1","challenge":"Do the thing","odds":0,"challenger":{"name":"Challenger","number":0},"victim":{"name":"Victim","number":2},"status":"new"}');t.json(n)}),s.use("/",d);var u=s;const l=Object(r.createServer)(u);t.default=(e,t)=>{Object(r.proxy)(l,e,t)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,